apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ include "app.fullname" . }}-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["/run.bash", "init"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "app.fullname" . }}-config
            - secretRef:
                name: {{ include "app.fullname" . }}-secret
          volumeMounts:
            - name: {{ include "app.fullname" . }}-ui-runtime-config
              mountPath: /usr/share/html/ui/runtime/
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.search.enabled }}
        - name: {{ include "app.fullname" . }}-index-schema-apply
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["/run.bash", "index_schema_apply"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "app.fullname" . }}-config
            - secretRef:
                name: {{ include "app.fullname" . }}-secret
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["/run.bash", "server"]
          volumeMounts:
          {{- if .Values.global.storage.enabled }}
            - name: {{ .Release.Name }}-volume
              mountPath: {{ .Values.media_root }}
          {{- end }}
            - name: {{ .Release.Name }}-logging-vol
              mountPath: /etc/papermerge/logging.yaml
              subPath: logging.yaml
            - name: {{ .Release.Name }}-public-key
              mountPath: /etc/papermerge/public.key
              subPath: public.key
            - name: {{ include "app.fullname" . }}-ui-runtime-config
              mountPath: /usr/share/html/ui/runtime/
          {{- if .Values.cf.enabled }}
            - name: {{ .Release.Name }}-cf-private-key
              mountPath: /etc/papermerge/cf-private.key
              subPath: cf-private.key
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "app.fullname" . }}-config
            - secretRef:
                name: {{ include "app.fullname" . }}-secret
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /probe/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /probe/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
      {{- if .Values.global.storage.enabled }}
        - name: {{ .Release.Name }}-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc
      {{- end }}
        - name: {{ .Release.Name }}-logging-vol
          configMap:
            name: {{ .Release.Name }}-logging-config
      {{- if .Values.cf.enabled }}
        - name: {{ .Release.Name }}-cf-private-key
          configMap:
            name: {{ include "app.fullname" . }}-cf-private-key
      {{- end }}
        - name: {{ .Release.Name }}-public-key
          configMap:
            name: {{ include "app.fullname" . }}-public-key
        - name: {{ include "app.fullname" . }}-ui-runtime-config
          emptyDir: {}
